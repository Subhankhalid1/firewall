{"ast":null,"code":"var _jsxFileName = \"D:\\\\Working Era of React\\\\BootCamp2020\\\\firewall\\\\src\\\\component\\\\FAQ\\\\FaqComp\\\\Accordion.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { MainDataObject } from \"./DetailObject\";\nimport { GlobalContext } from \"../../Context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: \"#d32229\",\n    fontWeight: \"bold\"\n  }\n}));\nexport default function SimpleAccordion() {\n  _s();\n\n  var _MainDataObject$faqDi;\n\n  const classes = useStyles();\n  const {\n    faqDisplay\n  } = useContext(GlobalContext);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"pt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faq-grid\",\n      children: (_MainDataObject$faqDi = MainDataObject[faqDisplay].faqArray) === null || _MainDataObject$faqDi === void 0 ? void 0 : _MainDataObject$faqDi.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 49\n              }, this),\n              \"aria-controls\": \"panel1a-content\",\n              id: \"panel1a-header\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.heading,\n                children: item.ques\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                style: {\n                  textAlign: \"justify\",\n                  fontSize: \"smaller\"\n                },\n                children: item.ans.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.a\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 56\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimpleAccordion, \"3L2pvjHd5qGtltCcb1IJLNkuFXU=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimpleAccordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleAccordion\");","map":{"version":3,"sources":["D:/Working Era of React/BootCamp2020/firewall/src/component/FAQ/FaqComp/Accordion.jsx"],"names":["React","useContext","makeStyles","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","MainDataObject","GlobalContext","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","color","fontWeight","SimpleAccordion","classes","faqDisplay","faqArray","map","item","index","ques","textAlign","ans","a"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL,GAD+B;AAIrCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADL;AAELC,IAAAA,KAAK,EAAE,SAFF;AAGLC,IAAAA,UAAU,EAAE;AAHP;AAJ4B,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAAA;;AACtC,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAiBrB,UAAU,CAACQ,aAAD,CAAjC;AACA,sBACI;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,yCAEQD,cAAc,CAACc,UAAD,CAAd,CAA2BC,QAFnC,0DAEQ,sBAAqCC,GAArC,CAAyC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtD,4BAAO;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACH,QAAC,SAAD;AAAA,oCACI,QAAC,gBAAD;AACI,cAAA,UAAU,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,sBADhB;AAEI,+BAAc,iBAFlB;AAGI,cAAA,EAAE,EAAC,gBAHP;AAAA,qCAKI,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEL,OAAO,CAACP,OAA/B;AAAA,0BAAyCW,IAAI,CAACE;AAA9C;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,gBAAD;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAA4B,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE,SAAb;AAAwBb,kBAAAA,QAAQ,EAAE;AAAlC,iBAAnC;AAAA,0BAEQU,IAAI,CAACI,GAAL,CAASL,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,sCAAO;AAAA,8BAAgBD,IAAI,CAACK;AAArB,qBAAQJ,KAAR;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH,iBAFD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,WAA2BA,KAA3B;AAAA;AAAA;AAAA;AAAA,gBAAP;AAoBH,OArBD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GAjCuBN,e;UACJV,S;;;KADIU,e","sourcesContent":["import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { MainDataObject } from \"./DetailObject\";\r\nimport { GlobalContext } from \"../../Context/Context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: \"#d32229\",\r\n        fontWeight: \"bold\"\r\n    },\r\n}));\r\n\r\nexport default function SimpleAccordion() {\r\n    const classes = useStyles();\r\n    const { faqDisplay } = useContext(GlobalContext);\r\n    return (\r\n        <section className=\"pt-5\">\r\n            <div className=\"faq-grid\" >\r\n                {\r\n                    MainDataObject[faqDisplay].faqArray?.map((item, index) => {\r\n                        return <div className=\"mb-3\" key={index}>\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                >\r\n                                    <Typography className={classes.heading}>{item.ques}</Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <div className=\"text-muted\" style={{ textAlign: \"justify\", fontSize: \"smaller\" }}>\r\n                                        {\r\n                                            item.ans.map((item, index) => {\r\n                                                return <p key={index}>{item.a}</p>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}