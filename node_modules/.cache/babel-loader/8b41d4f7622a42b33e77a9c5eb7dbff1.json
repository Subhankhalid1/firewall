{"ast":null,"code":"var _jsxFileName = \"E:\\\\Working Era of React\\\\BootCamp2020\\\\firewall\\\\src\\\\component\\\\Cart\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { List, ListItem, Divider, ListItemText, ListItemAvatar, ListItemSecondaryAction, IconButton, Avatar, Typography } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { GlobalContext } from \"../Context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    color: 'green'\n  },\n  inline: {\n    display: \"inline\"\n  },\n  listItem: {\n    padding: theme.spacing(1, 0),\n    justifyContent: \"flex-end\"\n  },\n  total: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.fontSize * 2\n  }\n}));\n\nconst Cart = () => {\n  _s();\n\n  const classes = useStyles({});\n  const {\n    cartData,\n    setCartData\n  } = useContext(GlobalContext);\n  let total = 0;\n  cartData && cartData.forEach(item => {\n    total += Number(item.price * item.count);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h2\",\n      variant: \"h4\",\n      color: \"primary\",\n      gutterBottom: true,\n      children: \"Shopping Cart History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"p\",\n      variant: \"body1\",\n      children: \"You have selected items in your cart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: [cartData && cartData.map((product, index) => {\n        var _product$image$;\n\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [console.log(product), /*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Product\",\n                src: product.image && ((_product$image$ = product.image[0]) === null || _product$image$ === void 0 ? void 0 : _product$image$.src)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${product.name} (${product.count})`,\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body2\",\n                  className: classes.inline,\n                  color: \"textPrimary\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: [\" \", product.price, \"/- KR only \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger rounded-0\",\n                onClick: e => {\n                  let cartItems = JSON.parse(localStorage.getItem('cart'));\n                  const filter = cartItems.filter(item => item.id !== product.id);\n                  localStorage.setItem('cart', JSON.stringify(filter));\n                  setCartData(filter);\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-4\",\n        style: {\n          color: 'forestgreen'\n        },\n        children: \"Total billing amount is given below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        className: classes.listItem,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          className: classes.total,\n          children: [total.toFixed(2), \"/- KR\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"/mTDRcUNO6JIqMuOwh0xlxYz2TE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["E:/Working Era of React/BootCamp2020/firewall/src/component/Cart/Cart.jsx"],"names":["React","useContext","createStyles","Theme","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","ListItemSecondaryAction","IconButton","Avatar","Typography","DeleteIcon","GlobalContext","useStyles","theme","root","width","backgroundColor","palette","background","paper","color","inline","display","listItem","padding","spacing","justifyContent","total","fontWeight","typography","fontWeightBold","fontSize","Cart","classes","cartData","setCartData","forEach","item","Number","price","count","map","product","index","console","log","image","src","name","e","cartItems","JSON","parse","localStorage","getItem","filter","id","setItem","stringify","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,0BAAhD;AACA,SACIC,IADJ,EAEIC,QAFJ,EAGIC,OAHJ,EAIIC,YAJJ,EAKIC,cALJ,EAMIC,uBANJ,EAOIC,UAPJ,EAQIC,MARJ,EASIC,UATJ,QAUO,mBAVP;AAWA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAAEa,KAAD,IACzBf,YAAY,CAAC;AACTgB,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC,KAFxC;AAGFC,IAAAA,KAAK,EAAE;AAHL,GADG;AAOTC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GAPC;AAUTC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADH;AAENC,IAAAA,cAAc,EAAE;AAFV,GAVD;AAcTC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAEf,KAAK,CAACgB,UAAN,CAAiBC,cAD1B;AAEHC,IAAAA,QAAQ,EAAElB,KAAK,CAACgB,UAAN,CAAiBE,QAAjB,GAA4B;AAFnC;AAdE,CAAD,CADY,CAA5B;;AAsBA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,OAAO,GAAGrB,SAAS,CAAC,EAAD,CAAzB;AACA,QAAM;AAAEsB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BtC,UAAU,CAACc,aAAD,CAA5C;AAEA,MAAIgB,KAAK,GAAG,CAAZ;AACAO,EAAAA,QAAQ,IAAIA,QAAQ,CAACE,OAAT,CAAiBC,IAAI,IAAI;AACjCV,IAAAA,KAAK,IAAIW,MAAM,CAACD,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACG,KAAnB,CAAf;AACH,GAFW,CAAZ;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,oBACW;AAAA;AAAA;AAAA;AAAA,YADX,eAEI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,KAAK,EAAC,SAA9C;AAAwD,MAAA,YAAY,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,GAAtB;AAA0B,MAAA,OAAO,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eASI;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEP,OAAO,CAACnB,IAAzB;AAAA,iBACKoB,QAAQ,IAAIA,QAAQ,CAChBO,GADQ,CACJ,CAACC,OAAD,EAAUC,KAAV;AAAA;;AAAA,4BACD,QAAC,KAAD,CAAO,QAAP;AAAA,qBACKC,OAAO,CAACC,GAAR,CAAYH,OAAZ,CADL,eAEI,QAAC,QAAD;AAAU,YAAA,UAAU,EAAC,YAArB;AAAA,oCACI,QAAC,cAAD;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,GAAG,EAAC,SAAZ;AAAsB,gBAAA,GAAG,EAAEA,OAAO,CAACI,KAAR,wBAAiBJ,OAAO,CAACI,KAAR,CAAc,CAAd,CAAjB,oDAAiB,gBAAkBC,GAAnC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,YAAD;AACI,cAAA,OAAO,EAAG,GAAEL,OAAO,CAACM,IAAK,KAAIN,OAAO,CAACF,KAAM,GAD/C;AAEI,cAAA,SAAS,eACL,QAAC,KAAD,CAAO,QAAP;AAAA,uCACI,QAAC,UAAD;AACI,kBAAA,SAAS,EAAC,MADd;AAEI,kBAAA,OAAO,EAAC,OAFZ;AAGI,kBAAA,SAAS,EAAEP,OAAO,CAACZ,MAHvB;AAII,kBAAA,KAAK,EAAC,aAJV;AAAA,yCAMI;AAAG,oBAAA,KAAK,EAAE;AAAED,sBAAAA,KAAK,EAAE;AAAT,qBAAV;AAAA,oCAA8BsB,OAAO,CAACH,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAwBI,QAAC,uBAAD;AAAA,qCACI;AAAQ,gBAAA,SAAS,EAAC,0BAAlB;AAA6C,gBAAA,OAAO,EAAGU,CAAD,IAAO;AACzD,sBAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAhB;AACA,wBAAMC,MAAM,GAAGL,SAAS,CAACK,MAAV,CAAiBlB,IAAI,IAAIA,IAAI,CAACmB,EAAL,KAAYd,OAAO,CAACc,EAA7C,CAAf;AACAH,kBAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BN,IAAI,CAACO,SAAL,CAAeH,MAAf,CAA7B;AACApB,kBAAAA,WAAW,CAACoB,MAAD,CAAX;AACH,iBALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAmCI,QAAC,OAAD;AAAS,YAAA,OAAO,EAAC,OAAjB;AAAyB,YAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAnCJ;AAAA,WAAqBZ,KAArB;AAAA;AAAA;AAAA;AAAA,gBADC;AAAA,OADI,CADjB,eAyCI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,KAAK,EAAE;AAAEvB,UAAAA,KAAK,EAAE;AAAT,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCJ,eA0CI,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEa,OAAO,CAACV,QAA7B;AAAA,+BAEI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,WAApB;AAAgC,UAAA,SAAS,EAAEU,OAAO,CAACN,KAAnD;AAAA,qBAGQA,KAAK,CAACgC,OAAN,CAAc,CAAd,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiEH,CA1ED;;GAAM3B,I;UACcpB,S;;;KADdoB,I;AA4EN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from \"react\"\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\"\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Divider,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    IconButton,\r\n    Avatar,\r\n    Typography\r\n} from \"@material-ui/core\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport { GlobalContext } from \"../Context/Context\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: 'green',\r\n\r\n        },\r\n        inline: {\r\n            display: \"inline\"\r\n        },\r\n        listItem: {\r\n            padding: theme.spacing(1, 0),\r\n            justifyContent: \"flex-end\"\r\n        },\r\n        total: {\r\n            fontWeight: theme.typography.fontWeightBold,\r\n            fontSize: theme.typography.fontSize * 2\r\n        }\r\n    })\r\n)\r\n\r\nconst Cart = () => {\r\n    const classes = useStyles({})\r\n    const { cartData, setCartData } = useContext(GlobalContext);\r\n\r\n    let total = 0;\r\n    cartData && cartData.forEach(item => {\r\n        total += Number(item.price * item.count)\r\n    })\r\n\r\n    return (\r\n        <div className=\"px-4\">\r\n            <br /> <br />\r\n            <Typography component=\"h2\" variant=\"h4\" color=\"primary\" gutterBottom>\r\n                Shopping Cart History\r\n            </Typography>\r\n            <br />\r\n            <Typography component=\"p\" variant=\"body1\">\r\n                You have selected items in your cart.\r\n            </Typography>\r\n            <br />\r\n            <List className={classes.root}>\r\n                {cartData && cartData\r\n                    .map((product, index) => (\r\n                        <React.Fragment key={index}>\r\n                            {console.log(product)}\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt=\"Product\" src={product.image && product.image[0]?.src} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={`${product.name} (${product.count})`}\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                                <b style={{ color: \"red\" }}> {product.price}/- KR only </b>\r\n\r\n\r\n                                                \r\n\r\n                                            </Typography>\r\n                                          \r\n                                        </React.Fragment>\r\n                                    }\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <button className=\"btn btn-danger rounded-0\" onClick={(e) => {\r\n                                        let cartItems = JSON.parse(localStorage.getItem('cart'));\r\n                                        const filter = cartItems.filter(item => item.id !== product.id);\r\n                                        localStorage.setItem('cart', JSON.stringify(filter));\r\n                                        setCartData(filter);\r\n                                    }}>Remove</button>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider variant=\"inset\" component=\"li\" />\r\n                        </React.Fragment>\r\n                    ))}\r\n                <h3 className=\"mt-4\" style={{ color: 'forestgreen' }}>Total billing amount is given below:</h3>\r\n                <ListItem className={classes.listItem}>\r\n\r\n                    <Typography variant=\"subtitle1\" className={classes.total}>\r\n                        {/* &pound; */}\r\n                        {\r\n                            total.toFixed(2)\r\n                        }/- KR\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart"]},"metadata":{},"sourceType":"module"}