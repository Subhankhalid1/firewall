{"ast":null,"code":"import React,{useContext}from'react';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemSecondaryAction from'@material-ui/core/ListItemSecondaryAction';import ListItemText from'@material-ui/core/ListItemText';import Checkbox from'@material-ui/core/Checkbox';import{GlobalContext}from\"../../Context/Context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function CheckboxList(_ref){var categoryCount=_ref.categoryCount,categoryList=_ref.categoryList;var _useContext=useContext(GlobalContext),checked=_useContext.checked,handleToggle=_useContext.handleToggle,brandSearch=_useContext.brandSearch;var categoryCountArray=categoryCount&&Object.entries(categoryCount);var filterBrand=categoryCountArray&&categoryCountArray.filter(function(item){return item[0].toLowerCase().includes(brandSearch.toLowerCase());});return/*#__PURE__*/_jsx(List,{className:\"listScroll\",children:filterBrand?filterBrand.map(function(value){var labelId=\"checkbox-list-label-\".concat(value);return/*#__PURE__*/_jsx(_Fragment,{children:value[0]!==\"undefined\"&&/*#__PURE__*/_jsxs(ListItem,{role:undefined,dense:true,button:true,onClick:handleToggle(value[0]),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Checkbox,{edge:\"start\",checked:checked.includes(value[0])?true:false,tabIndex:-1,disableRipple:true,inputProps:{'aria-labelledby':labelId}})}),/*#__PURE__*/_jsx(ListItemText,{className:\"text-muted\",id:labelId,primary:value[0]}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(\"span\",{className:\"text-muted\",children:value[1]})})]},value)});}):categoryList===null||categoryList===void 0?void 0:categoryList.map(function(item,value){return/*#__PURE__*/_jsxs(ListItem,{role:undefined,dense:true,button:true,onClick:handleToggle(value[0]),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Checkbox,{edge:\"start\",checked:checked.includes(value[0])?true:false,tabIndex:-1,disableRipple:true})}),/*#__PURE__*/_jsx(ListItemText,{className:\"text-muted\",primary:item.name}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(\"span\",{className:\"text-muted\",children:value[1]})})]},value);})});}","map":{"version":3,"sources":["D:/Working Era of React/BootCamp2020/firewall/src/component/Eqipments/Eqipment/ListItems.jsx"],"names":["React","useContext","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","GlobalContext","CheckboxList","categoryCount","categoryList","checked","handleToggle","brandSearch","categoryCountArray","Object","entries","filterBrand","filter","item","toLowerCase","includes","map","value","labelId","undefined","name"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { GlobalContext } from \"../../Context/Context\";\r\n\r\nexport default function CheckboxList({ categoryCount, categoryList }) {\r\n    const { checked, handleToggle, brandSearch } = useContext(GlobalContext);\r\n\r\n    const categoryCountArray = categoryCount && Object.entries(categoryCount);\r\n\r\n    const filterBrand = categoryCountArray && categoryCountArray.filter(item => {\r\n        return item[0].toLowerCase().includes(brandSearch.toLowerCase());\r\n    });\r\n\r\n    return (\r\n        <List className=\"listScroll\">\r\n            {\r\n                filterBrand ? filterBrand.map((value) => {\r\n                    const labelId = `checkbox-list-label-${value}`;\r\n                    return <>\r\n                        {value[0] !== \"undefined\" &&\r\n                            <ListItem key={value} role={undefined} dense button onClick={handleToggle(value[0])}>\r\n                                <ListItemIcon>\r\n                                    <Checkbox\r\n                                        edge=\"start\"\r\n                                        checked={checked.includes(value[0]) ? true : false}\r\n                                        tabIndex={-1}\r\n                                        disableRipple\r\n                                        inputProps={{ 'aria-labelledby': labelId }}\r\n                                    />\r\n                                </ListItemIcon>\r\n                                <ListItemText className=\"text-muted\" id={labelId} primary={value[0]} />\r\n                                <ListItemSecondaryAction>\r\n                                    <span className=\"text-muted\">{value[1]}</span>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        }\r\n                    </>\r\n                }) :\r\n                    categoryList?.map((item, value) => {\r\n                        return <ListItem key={value} role={undefined} dense button onClick={handleToggle(value[0])}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    edge=\"start\"\r\n                                    checked={checked.includes(value[0]) ? true : false}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText className=\"text-muted\" primary={item.name} />\r\n                            <ListItemSecondaryAction>\r\n                                <span className=\"text-muted\">{value[1]}</span>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    })\r\n            }\r\n        </List>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}