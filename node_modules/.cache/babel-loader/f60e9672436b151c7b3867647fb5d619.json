{"ast":null,"code":"var _jsxFileName = \"D:\\\\Working Era of React\\\\BootCamp2020\\\\firewall\\\\src\\\\component\\\\Eqipments\\\\Eqipment\\\\ListItems.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { GlobalContext } from \"../../Context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckboxList({\n  categoryCount,\n  categoryList\n}) {\n  _s();\n\n  const {\n    checked,\n    handleToggle,\n    brandSearch\n  } = useContext(GlobalContext);\n  const categoryCountArray = categoryCount && Object.entries(categoryCount);\n  const filterBrand = categoryCountArray && categoryCountArray.filter(item => {\n    return item[0].toLowerCase().includes(brandSearch.toLowerCase());\n  });\n  console.log(categoryCountArray.pr);\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"listScroll\",\n    children: filterBrand ? filterBrand.map(value => {\n      const labelId = `checkbox-list-label-${value}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        role: undefined,\n        dense: true,\n        button: true,\n        onClick: handleToggle(value[0]),\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"start\",\n            checked: checked.includes(value[0]) ? true : false,\n            tabIndex: -1,\n            disableRipple: true,\n            inputProps: {\n              'aria-labelledby': labelId\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          className: \"text-muted\",\n          id: labelId,\n          primary: value[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            children: value[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)]\n      }, value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this);\n    }) : categoryList === null || categoryList === void 0 ? void 0 : categoryList.map((item, value) => {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        role: undefined,\n        dense: true,\n        button: true,\n        onClick: handleToggle(value[0]),\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"start\",\n            checked: checked.includes(value[0]) ? true : false,\n            tabIndex: -1,\n            disableRipple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          className: \"text-muted\",\n          primary: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            children: value[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)]\n      }, value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 32\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckboxList, \"rLE3usGF3Duza1HGuH/nhlsGoqk=\");\n\n_c = CheckboxList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxList\");","map":{"version":3,"sources":["D:/Working Era of React/BootCamp2020/firewall/src/component/Eqipments/Eqipment/ListItems.jsx"],"names":["React","useContext","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","GlobalContext","CheckboxList","categoryCount","categoryList","checked","handleToggle","brandSearch","categoryCountArray","Object","entries","filterBrand","filter","item","toLowerCase","includes","console","log","pr","map","value","labelId","undefined","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAtB,EAAuD;AAAA;;AAClE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAyCb,UAAU,CAACO,aAAD,CAAzD;AAEA,QAAMO,kBAAkB,GAAGL,aAAa,IAAIM,MAAM,CAACC,OAAP,CAAeP,aAAf,CAA5C;AAEA,QAAMQ,WAAW,GAAGH,kBAAkB,IAAIA,kBAAkB,CAACI,MAAnB,CAA0BC,IAAI,IAAI;AACxE,WAAOA,IAAI,CAAC,CAAD,CAAJ,CAAQC,WAAR,GAAsBC,QAAtB,CAA+BR,WAAW,CAACO,WAAZ,EAA/B,CAAP;AACH,GAFyC,CAA1C;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAYT,kBAAkB,CAACU,EAA/B;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA,cAGQP,WAAW,GAAGA,WAAW,CAACQ,GAAZ,CAAiBC,KAAD,IAAW;AACrC,YAAMC,OAAO,GAAI,uBAAsBD,KAAM,EAA7C;AACA,0BACI,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAEE,SAA5B;AAAuC,QAAA,KAAK,MAA5C;AAA6C,QAAA,MAAM,MAAnD;AAAoD,QAAA,OAAO,EAAEhB,YAAY,CAACc,KAAK,CAAC,CAAD,CAAN,CAAzE;AAAA,gCACI,QAAC,YAAD;AAAA,iCACI,QAAC,QAAD;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,OAAO,EAAEf,OAAO,CAACU,QAAR,CAAiBK,KAAK,CAAC,CAAD,CAAtB,IAA6B,IAA7B,GAAoC,KAFjD;AAGI,YAAA,QAAQ,EAAE,CAAC,CAHf;AAII,YAAA,aAAa,MAJjB;AAKI,YAAA,UAAU,EAAE;AAAE,iCAAmBC;AAArB;AALhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,YAAxB;AAAqC,UAAA,EAAE,EAAEA,OAAzC;AAAkD,UAAA,OAAO,EAAED,KAAK,CAAC,CAAD;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,uBAAD;AAAA,iCACI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,sBAA8BA,KAAK,CAAC,CAAD;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA,SAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAiBH,KAnBa,CAAH,GAoBPhB,YApBO,aAoBPA,YApBO,uBAoBPA,YAAY,CAAEe,GAAd,CAAkB,CAACN,IAAD,EAAOO,KAAP,KAAiB;AAC/B,0BAAO,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAEE,SAA5B;AAAuC,QAAA,KAAK,MAA5C;AAA6C,QAAA,MAAM,MAAnD;AAAoD,QAAA,OAAO,EAAEhB,YAAY,CAACc,KAAK,CAAC,CAAD,CAAN,CAAzE;AAAA,gCACH,QAAC,YAAD;AAAA,iCACI,QAAC,QAAD;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,OAAO,EAAEf,OAAO,CAACU,QAAR,CAAiBK,KAAK,CAAC,CAAD,CAAtB,IAA6B,IAA7B,GAAoC,KAFjD;AAGI,YAAA,QAAQ,EAAE,CAAC,CAHf;AAII,YAAA,aAAa;AAJjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADG,eASH,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,YAAxB;AAAqC,UAAA,OAAO,EAAEP,IAAI,CAACU;AAAnD;AAAA;AAAA;AAAA;AAAA,gBATG,eAUH,QAAC,uBAAD;AAAA,iCACI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,sBAA8BH,KAAK,CAAC,CAAD;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVG;AAAA,SAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AAcH,KAfD;AAvBZ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH;;GApDuBlB,Y;;KAAAA,Y","sourcesContent":["import React, { useContext } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { GlobalContext } from \"../../Context/Context\";\r\n\r\nexport default function CheckboxList({ categoryCount, categoryList }) {\r\n    const { checked, handleToggle, brandSearch } = useContext(GlobalContext);\r\n\r\n    const categoryCountArray = categoryCount && Object.entries(categoryCount);\r\n\r\n    const filterBrand = categoryCountArray && categoryCountArray.filter(item => {\r\n        return item[0].toLowerCase().includes(brandSearch.toLowerCase());\r\n    });\r\n    console.log(categoryCountArray.pr)\r\n    return (\r\n        <List className=\"listScroll\">\r\n            {\r\n              \r\n                filterBrand ? filterBrand.map((value) => {\r\n                    const labelId = `checkbox-list-label-${value}`;\r\n                    return (\r\n                        <ListItem key={value} role={undefined} dense button onClick={handleToggle(value[0])}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    edge=\"start\"\r\n                                    checked={checked.includes(value[0]) ? true : false}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText className=\"text-muted\" id={labelId} primary={value[0]} />\r\n                            <ListItemSecondaryAction>\r\n                                <span className=\"text-muted\">{value[1]}</span>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    );\r\n                }) :\r\n                    categoryList?.map((item, value) => {\r\n                        return <ListItem key={value} role={undefined} dense button onClick={handleToggle(value[0])}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    edge=\"start\"\r\n                                    checked={checked.includes(value[0]) ? true : false}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText className=\"text-muted\" primary={item.name} />\r\n                            <ListItemSecondaryAction>\r\n                                <span className=\"text-muted\">{value[1]}</span>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    })\r\n            }\r\n        </List>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}