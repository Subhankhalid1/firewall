{"ast":null,"code":"import _toConsumableArray from\"D:/Working Era of React/BootCamp2020/firewall/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:/Working Era of React/BootCamp2020/firewall/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemSecondaryAction from'@material-ui/core/ListItemSecondaryAction';import ListItemText from'@material-ui/core/ListItemText';import Checkbox from'@material-ui/core/Checkbox';import IconButton from'@material-ui/core/IconButton';import CommentIcon from'@material-ui/icons/Comment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{width:'100%',maxWidth:360,margin:\"auto\",backgroundColor:theme.palette.background.paper}};});export default function CheckboxList(){var classes=useStyles();var _React$useState=React.useState([0]),_React$useState2=_slicedToArray(_React$useState,2),checked=_React$useState2[0],setChecked=_React$useState2[1];var handleToggle=function handleToggle(value){return function(){var currentIndex=checked.indexOf(value);var newChecked=_toConsumableArray(checked);if(currentIndex===-1){newChecked.push(value);}else{newChecked.splice(currentIndex,1);}setChecked(newChecked);};};return/*#__PURE__*/_jsx(List,{className:classes.root,children:[0,1,2,3,4,5,6].map(function(value,index){var labelId=\"checkbox-list-label-\".concat(value);return/*#__PURE__*/_jsxs(ListItem,{role:undefined,dense:true,button:true,onClick:handleToggle(value),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Checkbox,{edge:\"start\",checked:checked.indexOf(value)!==-1,tabIndex:-1,disableRipple:true,inputProps:{'aria-labelledby':labelId}})}),/*#__PURE__*/_jsx(ListItemText,{id:labelId,primary:\"Line item \".concat(value+1)}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",\"aria-label\":\"comments\",children:/*#__PURE__*/_jsx(CommentIcon,{})})})]},index);})});}","map":{"version":3,"sources":["D:/Working Era of React/BootCamp2020/firewall/src/component/Blog/Category/CategoryList.jsx"],"names":["React","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","useStyles","theme","root","width","maxWidth","margin","backgroundColor","palette","background","paper","CheckboxList","classes","useState","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","map","index","labelId","undefined"],"mappings":"gVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2CAApC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGT,UAAU,CAAC,SAACU,KAAD,QAAY,CACrCC,IAAI,CAAE,CACFC,KAAK,CAAE,MADL,CAEFC,QAAQ,CAAE,GAFR,CAGFC,MAAM,CAAE,MAHN,CAIFC,eAAe,CAAEL,KAAK,CAACM,OAAN,CAAcC,UAAd,CAAyBC,KAJxC,CAD+B,CAAZ,EAAD,CAA5B,CASA,cAAe,SAASC,CAAAA,YAAT,EAAwB,CACnC,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CACA,oBAA8BV,KAAK,CAACsB,QAAN,CAAe,CAAC,CAAD,CAAf,CAA9B,oDAAOC,OAAP,qBAAgBC,UAAhB,qBAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,QAAW,WAAM,CAClC,GAAMC,CAAAA,YAAY,CAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB,CACA,GAAMG,CAAAA,UAAU,oBAAON,OAAP,CAAhB,CAEA,GAAII,YAAY,GAAK,CAAC,CAAtB,CAAyB,CACrBE,UAAU,CAACC,IAAX,CAAgBJ,KAAhB,EACH,CAFD,IAEO,CACHG,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,CAAgC,CAAhC,EACH,CAEDH,UAAU,CAACK,UAAD,CAAV,CACH,CAXoB,EAArB,CAaA,mBACI,KAAC,IAAD,EAAM,SAAS,CAAER,OAAO,CAACT,IAAzB,UACK,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAY,CAAZ,CAAc,CAAd,CAAgB,CAAhB,EAAmBoB,GAAnB,CAAuB,SAACN,KAAD,CAAOO,KAAP,CAAiB,CACrC,GAAMC,CAAAA,OAAO,+BAA0BR,KAA1B,CAAb,CAEA,mBACI,MAAC,QAAD,EAAsB,IAAI,CAAES,SAA5B,CAAuC,KAAK,KAA5C,CAA6C,MAAM,KAAnD,CAAoD,OAAO,CAAEV,YAAY,CAACC,KAAD,CAAzE,wBACI,KAAC,YAAD,wBACI,KAAC,QAAD,EACI,IAAI,CAAC,OADT,CAEI,OAAO,CAAEH,OAAO,CAACK,OAAR,CAAgBF,KAAhB,IAA2B,CAAC,CAFzC,CAGI,QAAQ,CAAE,CAAC,CAHf,CAII,aAAa,KAJjB,CAKI,UAAU,CAAE,CAAE,kBAAmBQ,OAArB,CALhB,EADJ,EADJ,cAUI,KAAC,YAAD,EAAc,EAAE,CAAEA,OAAlB,CAA2B,OAAO,qBAAeR,KAAK,CAAG,CAAvB,CAAlC,EAVJ,cAWI,KAAC,uBAAD,wBACI,KAAC,UAAD,EAAY,IAAI,CAAC,KAAjB,CAAuB,aAAW,UAAlC,uBACI,KAAC,WAAD,IADJ,EADJ,EAXJ,GAAeO,KAAf,CADJ,CAmBH,CAtBA,CADL,EADJ,CA2BH","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        margin: \"auto\",\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function CheckboxList() {\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = React.useState([0]);\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            {[0, 1, 2, 3,4,5,6].map((value,index) => {\r\n                const labelId = `checkbox-list-label-${value}`;\r\n\r\n                return (\r\n                    <ListItem key={index} role={undefined} dense button onClick={handleToggle(value)}>\r\n                        <ListItemIcon>\r\n                            <Checkbox\r\n                                edge=\"start\"\r\n                                checked={checked.indexOf(value) !== -1}\r\n                                tabIndex={-1}\r\n                                disableRipple\r\n                                inputProps={{ 'aria-labelledby': labelId }}\r\n                            />\r\n                        </ListItemIcon>\r\n                        <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                <CommentIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}