{"ast":null,"code":"var _jsxFileName = \"D:\\\\Working Era of React\\\\BootCamp2020\\\\firewall\\\\src\\\\component\\\\Cart\\\\PayWithPayPal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PayWithPayPal = ({\n  items,\n  total\n}) => {\n  _s();\n\n  const [paidFor, setPaidfor] = useState(false);\n  const [error, setError] = useState(null);\n  const PayPalRef = useRef();\n  useEffect(() => {\n    window.paypal.Button({\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          intent: \"CAPTURE\",\n          purchase_units: [{\n            description: \"Firewall Force Payment\",\n            amount: {\n              currency_code: 'USD',\n              value: total\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        setPaidfor(true);\n        console.log(order);\n      },\n      onError: err => {\n        setError(err);\n        console.log(err);\n      }\n    }).render(PayPalRef.current);\n  }, []);\n  if (paidFor) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Thanks for purchasing...!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Error in payment processing...!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  console.log(error);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: PayPalRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PayWithPayPal, \"+GoHCEG/xGmBtFb1gQI0cTQoWbg=\");\n\n_c = PayWithPayPal;\nexport default PayWithPayPal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayWithPayPal\");","map":{"version":3,"sources":["D:/Working Era of React/BootCamp2020/firewall/src/component/Cart/PayWithPayPal.jsx"],"names":["React","useState","useRef","useEffect","PayWithPayPal","items","total","paidFor","setPaidfor","error","setError","PayPalRef","window","paypal","Button","createOrder","data","actions","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","capture","console","log","onError","err","render","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAAA;;AACxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMU,SAAS,GAAGT,MAAM,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,MAAM,CAACC,MAAP,CAAcC,MAAd,CAAqB;AACjBC,MAAAA,WAAW,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC5B,eAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AACxBC,UAAAA,MAAM,EAAE,SADgB;AAExBC,UAAAA,cAAc,EAAE,CAAC;AACbC,YAAAA,WAAW,EAAE,wBADA;AAEbC,YAAAA,MAAM,EAAE;AACJC,cAAAA,aAAa,EAAE,KADX;AAEJC,cAAAA,KAAK,EAAEnB;AAFH;AAFK,WAAD;AAFQ,SAArB,CAAP;AAUH,OAZgB;AAajBoB,MAAAA,SAAS,EAAE,OAAOV,IAAP,EAAaC,OAAb,KAAyB;AAChC,cAAMC,KAAK,GAAG,MAAMD,OAAO,CAACC,KAAR,CAAcS,OAAd,EAApB;AACAnB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH,OAjBgB;AAkBjBY,MAAAA,OAAO,EAAEC,GAAG,IAAI;AACZrB,QAAAA,QAAQ,CAACqB,GAAD,CAAR;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH;AArBgB,KAArB,EAsBGC,MAtBH,CAsBUrB,SAAS,CAACsB,OAtBpB;AAuBH,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,MAAI1B,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEXmB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AAEA,sBAAQ;AAAK,IAAA,GAAG,EAAEE;AAAV;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CArCD;;GAAMP,a;;KAAAA,a;AAuCN,eAAeA,aAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst PayWithPayPal = ({ items, total }) => {\r\n    const [paidFor, setPaidfor] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const PayPalRef = useRef();\r\n\r\n    useEffect(() => {\r\n        window.paypal.Button({\r\n            createOrder: (data, actions) => {\r\n                return actions.order.create({\r\n                    intent: \"CAPTURE\",\r\n                    purchase_units: [{\r\n                        description: \"Firewall Force Payment\",\r\n                        amount: {\r\n                            currency_code: 'USD',\r\n                            value: total\r\n                        }\r\n                    }]\r\n                })\r\n            },\r\n            onApprove: async (data, actions) => {\r\n                const order = await actions.order.capture();\r\n                setPaidfor(true);\r\n                console.log(order);\r\n            },\r\n            onError: err => {\r\n                setError(err);\r\n                console.log(err);\r\n            }\r\n        }).render(PayPalRef.current)\r\n    }, [])\r\n\r\n    if (paidFor) return <h1>Thanks for purchasing...!</h1>\r\n    if (error) return <h1>Error in payment processing...!</h1>\r\n\r\n    console.log(error)\r\n\r\n    return (<div ref={PayPalRef}></div>);\r\n}\r\n\r\nexport default PayWithPayPal\r\n"]},"metadata":{},"sourceType":"module"}