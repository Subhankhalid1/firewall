{"ast":null,"code":"var _jsxFileName = \"D:\\\\Working Era of React\\\\BootCamp2020\\\\firewall\\\\src\\\\component\\\\Cart\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { List, ListItem, Divider, ListItemText, ListItemAvatar, ListItemSecondaryAction, IconButton, Avatar, Typography } from \"@material-ui/core\";\nimport { GlobalContext } from \"../Context/Context\";\nimport { useState } from \"react\";\nimport PayWithPayPal from \"./PayWithPayPal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    color: 'green'\n  },\n  inline: {\n    display: \"inline\"\n  },\n  listItem: {\n    padding: theme.spacing(1, 0),\n    justifyContent: \"flex-end\"\n  },\n  total: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.fontSize * 2\n  }\n}));\n\nconst Cart = () => {\n  _s();\n\n  const classes = useStyles({});\n  const {\n    cartData,\n    setCartData\n  } = useContext(GlobalContext);\n  const [isCheckout, setCheckout] = useState(false);\n  let total = 0;\n  cartData && cartData.forEach(item => {\n    total += Number(item.price) * Number(item.count);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h2\",\n        variant: \"h6\",\n        color: \"primary\",\n        gutterBottom: true,\n        children: \"Shopping Cart History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        variant: \"body1\",\n        children: \"You have selected items in your cart.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        className: classes.root,\n        children: [cartData && cartData.map((product, index) => {\n          var _product$image$;\n\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [console.log(product), /*#__PURE__*/_jsxDEV(ListItem, {\n              alignItems: \"flex-start\",\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"Product\",\n                  src: product.image && ((_product$image$ = product.image[0]) === null || _product$image$ === void 0 ? void 0 : _product$image$.src)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${product.name} (${product.count})`,\n                secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"span\",\n                    variant: \"body2\",\n                    className: classes.inline,\n                    color: \"textPrimary\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: [\" \", product.price, \"/- KR only \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger rounded-0\",\n                  onClick: e => {\n                    let cartItems = JSON.parse(localStorage.getItem('cart'));\n                    const filter = cartItems.filter(item => item.id !== product.id);\n                    localStorage.setItem('cart', JSON.stringify(filter));\n                    setCartData(filter);\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              variant: \"inset\",\n              component: \"li\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-4\",\n          style: {\n            color: 'forestgreen'\n          },\n          children: \"Total billing amount is given below:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          className: classes.listItem,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            className: classes.total,\n            children: [total.toFixed(2), \"/- KR\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: isCheckout ? /*#__PURE__*/_jsxDEV(PayWithPayPal, {\n            items: cartData,\n            total: total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCheckout(true),\n            className: \"btn btn-danger\",\n            children: \"CheckOut\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cart, \"ogzyFoXxQkgqK8yqezoxW9aPJ8Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/Working Era of React/BootCamp2020/firewall/src/component/Cart/Cart.jsx"],"names":["React","useContext","createStyles","Theme","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","ListItemSecondaryAction","IconButton","Avatar","Typography","GlobalContext","useState","PayWithPayPal","useStyles","theme","root","width","backgroundColor","palette","background","paper","color","inline","display","listItem","padding","spacing","justifyContent","total","fontWeight","typography","fontWeightBold","fontSize","Cart","classes","cartData","setCartData","isCheckout","setCheckout","forEach","item","Number","price","count","map","product","index","console","log","image","src","name","e","cartItems","JSON","parse","localStorage","getItem","filter","id","setItem","stringify","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,0BAAhD;AACA,SACIC,IADJ,EACUC,QADV,EACoBC,OADpB,EAC6BC,YAD7B,EAC2CC,cAD3C,EAC2DC,uBAD3D,EACoFC,UADpF,EACgGC,MADhG,EACwGC,UADxG,QAEO,mBAFP;AAGA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,IACzBhB,YAAY,CAAC;AACTiB,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC,KAFxC;AAGFC,IAAAA,KAAK,EAAE;AAHL,GADG;AAOTC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GAPC;AAUTC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADH;AAENC,IAAAA,cAAc,EAAE;AAFV,GAVD;AAcTC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAEf,KAAK,CAACgB,UAAN,CAAiBC,cAD1B;AAEHC,IAAAA,QAAQ,EAAElB,KAAK,CAACgB,UAAN,CAAiBE,QAAjB,GAA4B;AAFnC;AAdE,CAAD,CADY,CAA5B;;AAsBA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,OAAO,GAAGrB,SAAS,CAAC,EAAD,CAAzB;AACA,QAAM;AAAEsB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BvC,UAAU,CAACa,aAAD,CAA5C;AACA,QAAM,CAAC2B,UAAD,EAAaC,WAAb,IAA4B3B,QAAQ,CAAC,KAAD,CAA1C;AAEA,MAAIiB,KAAK,GAAG,CAAZ;AACAO,EAAAA,QAAQ,IAAIA,QAAQ,CAACI,OAAT,CAAiBC,IAAI,IAAI;AACjCZ,IAAAA,KAAK,IAAIa,MAAM,CAACD,IAAI,CAACE,KAAN,CAAN,GAAqBD,MAAM,CAACD,IAAI,CAACG,KAAN,CAApC;AACH,GAFW,CAAZ;AAIA,sBAAO;AAAA,2BACH;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,oBACW;AAAA;AAAA;AAAA;AAAA,cADX,eAEI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAwC,QAAA,KAAK,EAAC,SAA9C;AAAwD,QAAA,YAAY,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,GAAtB;AAA0B,QAAA,OAAO,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAET,OAAO,CAACnB,IAAzB;AAAA,mBACKoB,QAAQ,IAAIA,QAAQ,CAChBS,GADQ,CACJ,CAACC,OAAD,EAAUC,KAAV;AAAA;;AAAA,8BACD,QAAC,KAAD,CAAO,QAAP;AAAA,uBACKC,OAAO,CAACC,GAAR,CAAYH,OAAZ,CADL,eAEI,QAAC,QAAD;AAAU,cAAA,UAAU,EAAC,YAArB;AAAA,sCACI,QAAC,cAAD;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,GAAG,EAAC,SAAZ;AAAsB,kBAAA,GAAG,EAAEA,OAAO,CAACI,KAAR,wBAAiBJ,OAAO,CAACI,KAAR,CAAc,CAAd,CAAjB,oDAAiB,gBAAkBC,GAAnC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,YAAD;AACI,gBAAA,OAAO,EAAG,GAAEL,OAAO,CAACM,IAAK,KAAIN,OAAO,CAACF,KAAM,GAD/C;AAEI,gBAAA,SAAS,eACL,QAAC,KAAD,CAAO,QAAP;AAAA,yCACI,QAAC,UAAD;AACI,oBAAA,SAAS,EAAC,MADd;AAEI,oBAAA,OAAO,EAAC,OAFZ;AAGI,oBAAA,SAAS,EAAET,OAAO,CAACZ,MAHvB;AAII,oBAAA,KAAK,EAAC,aAJV;AAAA,2CAMI;AAAG,sBAAA,KAAK,EAAE;AAAED,wBAAAA,KAAK,EAAE;AAAT,uBAAV;AAAA,sCAA8BwB,OAAO,CAACH,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAoBI,QAAC,uBAAD;AAAA,uCACI;AAAQ,kBAAA,SAAS,EAAC,0BAAlB;AAA6C,kBAAA,OAAO,EAAGU,CAAD,IAAO;AACzD,wBAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAhB;AACA,0BAAMC,MAAM,GAAGL,SAAS,CAACK,MAAV,CAAiBlB,IAAI,IAAIA,IAAI,CAACmB,EAAL,KAAYd,OAAO,CAACc,EAA7C,CAAf;AACAH,oBAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BN,IAAI,CAACO,SAAL,CAAeH,MAAf,CAA7B;AACAtB,oBAAAA,WAAW,CAACsB,MAAD,CAAX;AACH,mBALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eA+BI,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC,OAAjB;AAAyB,cAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,oBA/BJ;AAAA,aAAqBZ,KAArB;AAAA;AAAA;AAAA;AAAA,kBADC;AAAA,SADI,CADjB,eAqCI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAqB,UAAA,KAAK,EAAE;AAAEzB,YAAAA,KAAK,EAAE;AAAT,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCJ,eAsCI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAEa,OAAO,CAACV,QAA7B;AAAA,iCAEI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,WAApB;AAAgC,YAAA,SAAS,EAAEU,OAAO,CAACN,KAAnD;AAAA,uBAGQA,KAAK,CAACkC,OAAN,CAAc,CAAd,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAtCJ,eA+CI;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,oBAEQzB,UAAU,gBACN,QAAC,aAAD;AAAe,YAAA,KAAK,EAAEF,QAAtB;AAAgC,YAAA,KAAK,EAAEP;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADM,gBAGN;AAAQ,YAAA,OAAO,EAAE,MAAMU,WAAW,CAAC,IAAD,CAAlC;AAA0C,YAAA,SAAS,EAAC,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,gBA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAqEH,CA/ED;;GAAML,I;UACcpB,S;;;KADdoB,I;AAiFN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from \"react\"\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\"\r\nimport {\r\n    List, ListItem, Divider, ListItemText, ListItemAvatar, ListItemSecondaryAction, IconButton, Avatar, Typography\r\n} from \"@material-ui/core\"\r\nimport { GlobalContext } from \"../Context/Context\";\r\nimport { useState } from \"react\";\r\nimport PayWithPayPal from \"./PayWithPayPal\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: 'green',\r\n\r\n        },\r\n        inline: {\r\n            display: \"inline\"\r\n        },\r\n        listItem: {\r\n            padding: theme.spacing(1, 0),\r\n            justifyContent: \"flex-end\"\r\n        },\r\n        total: {\r\n            fontWeight: theme.typography.fontWeightBold,\r\n            fontSize: theme.typography.fontSize * 2\r\n        }\r\n    })\r\n)\r\n\r\nconst Cart = () => {\r\n    const classes = useStyles({})\r\n    const { cartData, setCartData } = useContext(GlobalContext);\r\n    const [isCheckout, setCheckout] = useState(false);\r\n\r\n    let total = 0;\r\n    cartData && cartData.forEach(item => {\r\n        total += Number(item.price) * Number(item.count)\r\n    })\r\n\r\n    return <>\r\n        <div className=\"px-4\">\r\n            <br /> <br />\r\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                Shopping Cart History\r\n            </Typography>\r\n            <br />\r\n            <Typography component=\"p\" variant=\"body1\">\r\n                You have selected items in your cart.\r\n            </Typography>\r\n            <br />\r\n            <List className={classes.root}>\r\n                {cartData && cartData\r\n                    .map((product, index) => (\r\n                        <React.Fragment key={index}>\r\n                            {console.log(product)}\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt=\"Product\" src={product.image && product.image[0]?.src} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={`${product.name} (${product.count})`}\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                                <b style={{ color: \"red\" }}> {product.price}/- KR only </b>\r\n                                            </Typography>\r\n\r\n                                        </React.Fragment>\r\n                                    }\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <button className=\"btn btn-danger rounded-0\" onClick={(e) => {\r\n                                        let cartItems = JSON.parse(localStorage.getItem('cart'));\r\n                                        const filter = cartItems.filter(item => item.id !== product.id);\r\n                                        localStorage.setItem('cart', JSON.stringify(filter));\r\n                                        setCartData(filter);\r\n                                    }}>Remove</button>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider variant=\"inset\" component=\"li\" />\r\n                        </React.Fragment>\r\n                    ))}\r\n                <h3 className=\"mt-4\" style={{ color: 'forestgreen' }}>Total billing amount is given below:</h3>\r\n                <ListItem className={classes.listItem}>\r\n\r\n                    <Typography variant=\"subtitle1\" className={classes.total}>\r\n                        {/* &pound; */}\r\n                        {\r\n                            total.toFixed(2)\r\n                        }/- KR\r\n                    </Typography>\r\n                </ListItem>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    {\r\n                        isCheckout ?\r\n                            <PayWithPayPal items={cartData} total={total} />\r\n                            :\r\n                            <button onClick={() => setCheckout(true)} className=\"btn btn-danger\">CheckOut</button>\r\n                    }\r\n                </div>\r\n            </List>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Cart"]},"metadata":{},"sourceType":"module"}