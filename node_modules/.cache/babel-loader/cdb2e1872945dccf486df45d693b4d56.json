{"ast":null,"code":"import _slicedToArray from\"D:/Working Era of React/BootCamp2020/firewall/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext}from\"react\";import{createStyles,makeStyles}from\"@material-ui/core/styles\";import{List,ListItem,Divider,ListItemText,ListItemAvatar,ListItemSecondaryAction,Avatar,Typography}from\"@material-ui/core\";import{GlobalContext}from\"../Context/Context\";import{useState}from\"react\";import PayWithPayPal from\"./PayWithPayPal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return createStyles({root:{width:\"100%\",backgroundColor:theme.palette.background.paper,color:'green'},inline:{display:\"inline\"},listItem:{padding:theme.spacing(1,0),justifyContent:\"flex-end\"},total:{fontWeight:theme.typography.fontWeightBold,fontSize:theme.typography.fontSize*2}});});var Cart=function Cart(){var classes=useStyles({});var _useContext=useContext(GlobalContext),cartData=_useContext.cartData,setCartData=_useContext.setCartData;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isCheckout=_useState2[0],setCheckout=_useState2[1];var total=0;cartData&&cartData.forEach(function(item){total+=Number(item.price)*Number(item.count);});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"px-4\",children:[/*#__PURE__*/_jsx(\"br\",{}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{component:\"h2\",variant:\"h6\",color:\"primary\",gutterBottom:true,children:\"Shopping Cart History\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{component:\"p\",variant:\"body1\",children:\"You have selected items in your cart.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(List,{className:classes.root,children:[cartData&&cartData.map(function(product,index){var _product$image$;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(ListItem,{alignItems:\"flex-start\",children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{alt:\"Product\",src:product.image&&((_product$image$=product.image[0])===null||_product$image$===void 0?void 0:_product$image$.src)})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"\".concat(product.name,\" (\").concat(product.count,\")\"),secondary:/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Typography,{component:\"span\",variant:\"body2\",className:classes.inline,color:\"textPrimary\",children:/*#__PURE__*/_jsxs(\"b\",{style:{color:\"red\"},children:[\" \",product.price,\"/- KR only \"]})})})}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger rounded-0\",onClick:function onClick(e){var cartItems=JSON.parse(localStorage.getItem('cart'));var filter=cartItems.filter(function(item){return item.id!==product.id;});localStorage.setItem('cart',JSON.stringify(filter));setCartData(filter);},children:\"Remove\"})})]}),/*#__PURE__*/_jsx(Divider,{variant:\"inset\",component:\"li\"})]},index);}),/*#__PURE__*/_jsx(\"h3\",{className:\"mt-4\",style:{color:'forestgreen'},children:\"Total billing amount is given below:\"}),/*#__PURE__*/_jsx(ListItem,{className:classes.listItem,children:/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",className:classes.total,children:[total.toFixed(2),\"/- KR\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-end\",children:isCheckout?/*#__PURE__*/_jsx(PayWithPayPal,{items:cartData,total:total}):/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setCheckout(true);},className:\"btn btn-danger\",children:\"CheckOut\"})})]})]})});};export default Cart;","map":{"version":3,"sources":["D:/Working Era of React/BootCamp2020/firewall/src/component/Cart/Cart.jsx"],"names":["React","useContext","createStyles","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","ListItemSecondaryAction","Avatar","Typography","GlobalContext","useState","PayWithPayPal","useStyles","theme","root","width","backgroundColor","palette","background","paper","color","inline","display","listItem","padding","spacing","justifyContent","total","fontWeight","typography","fontWeightBold","fontSize","Cart","classes","cartData","setCartData","isCheckout","setCheckout","forEach","item","Number","price","count","map","product","index","image","src","name","e","cartItems","JSON","parse","localStorage","getItem","filter","id","setItem","stringify","toFixed"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\"\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\r\nimport {\r\n    List, ListItem, Divider, ListItemText, ListItemAvatar, ListItemSecondaryAction, Avatar, Typography\r\n} from \"@material-ui/core\"\r\nimport { GlobalContext } from \"../Context/Context\";\r\nimport { useState } from \"react\";\r\nimport PayWithPayPal from \"./PayWithPayPal\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: 'green',\r\n\r\n        },\r\n        inline: {\r\n            display: \"inline\"\r\n        },\r\n        listItem: {\r\n            padding: theme.spacing(1, 0),\r\n            justifyContent: \"flex-end\"\r\n        },\r\n        total: {\r\n            fontWeight: theme.typography.fontWeightBold,\r\n            fontSize: theme.typography.fontSize * 2\r\n        }\r\n    })\r\n)\r\n\r\nconst Cart = () => {\r\n    const classes = useStyles({})\r\n    const { cartData, setCartData } = useContext(GlobalContext);\r\n    const [isCheckout, setCheckout] = useState(false);\r\n\r\n    let total = 0;\r\n    cartData && cartData.forEach(item => {\r\n        total += Number(item.price) * Number(item.count)\r\n    })\r\n\r\n    return <>\r\n        <div className=\"px-4\">\r\n            <br /> <br />\r\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                Shopping Cart History\r\n            </Typography>\r\n            <br />\r\n            <Typography component=\"p\" variant=\"body1\">\r\n                You have selected items in your cart.\r\n            </Typography>\r\n            <br />\r\n            <List className={classes.root}>\r\n                {cartData && cartData\r\n                    .map((product, index) => (\r\n                        <React.Fragment key={index}>\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt=\"Product\" src={product.image && product.image[0]?.src} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={`${product.name} (${product.count})`}\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                className={classes.inline}\r\n                                                color=\"textPrimary\"\r\n                                            >\r\n                                                <b style={{ color: \"red\" }}> {product.price}/- KR only </b>\r\n                                            </Typography>\r\n\r\n                                        </React.Fragment>\r\n                                    }\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <button className=\"btn btn-danger rounded-0\" onClick={(e) => {\r\n                                        let cartItems = JSON.parse(localStorage.getItem('cart'));\r\n                                        const filter = cartItems.filter(item => item.id !== product.id);\r\n                                        localStorage.setItem('cart', JSON.stringify(filter));\r\n                                        setCartData(filter);\r\n                                    }}>Remove</button>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider variant=\"inset\" component=\"li\" />\r\n                        </React.Fragment>\r\n                    ))}\r\n                <h3 className=\"mt-4\" style={{ color: 'forestgreen' }}>Total billing amount is given below:</h3>\r\n                <ListItem className={classes.listItem}>\r\n\r\n                    <Typography variant=\"subtitle1\" className={classes.total}>\r\n                        {/* &pound; */}\r\n                        {\r\n                            total.toFixed(2)\r\n                        }/- KR\r\n                    </Typography>\r\n                </ListItem>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    {\r\n                        isCheckout ?\r\n                            <PayWithPayPal items={cartData} total={total} />\r\n                            :\r\n                            <button onClick={() => setCheckout(true)} className=\"btn btn-danger\">CheckOut</button>\r\n                    }\r\n                </div>\r\n            </List>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Cart"]},"metadata":{},"sourceType":"module"}